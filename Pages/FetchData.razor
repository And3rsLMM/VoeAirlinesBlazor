@page "/fetchdata"
@inject HttpClient client
@using Newtonsoft.Json
@using Data

<PageTitle>LIsta de Usuários</PageTitle>

<div class="container-fluid">
    <div>
    <div class="col-3">
        Usuário:<input type="text" class="form-control" id="inputUser" @bind-value="@adduser.Usuario">
    </div>
    <div class="col-3">
        Senha:<input type="password" class="form-control" id="inputPassword" @bind-value="@adduser.Senha">
    </div>
    <div class="col-3">
        Data de cadastro:<input type="datetime" class="form-control" id="dataCriacao" @bind-value="@adduser.DataAtual" readonly/>
    </div>
    <div class="col-3" style="margin-top:10px;">
        <button type="submit" @onclick="CadastrarUsuario" @onclick:preventDefault
            class="btn btn-primary mb-6">Cadastrar Usuario</button>
    </div>
    <p>@postStatus</p>
    </div>
    <div class="row justify-content-center" style="margin-bottom:50px">
        <h3 class="text-center">Usuarios Cadastrados</h3>
    </div>
    <div class="row" style="margin=25px;">
        <strong>Lista de usuários</strong>
        @if (Users != null)
        {
            <table class="table table-bordered table-striped">
                <thead class="">
                    <tr>
                        <th>Usuario</th>
                        <th>Data de Criação</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var user in Users)
                    {
                        <tr>
                            <td>@user.Usuario</td>
                            <td>@user.DataCriacao</td>
                            <td><button type="button" @onclick="()=>UpdateUser()"
                                class="btn btn-primary mb-6">Atualizar</button></td>
                            <td><button type="button" @onclick="()=>DeleteUser(user.Id)"
                                class="btn btn-primary mb-6">Deletar</button></td>
                        </tr>
                    }
                </tbody>
            </table>                
        }
    </div>
    <div class="row" style="margin:10px;margin-bottom:50px">
        <div class="col"><button @onclick="GetUsers" class="btn btn-info">Atualizar Lista</button></div>
    </div>
</div>
@code{
    private string? postStatus;
    private string? inputUser;
    private string? inputPassword;
    Login adduser = new Login();
    List<Login>? Users;

    protected override async Task OnInitializedAsync()
    {
        var apiName = "http://mrd34dpooly-001-site1.ftempurl.com/api/login";
        var httpResponse = await client.GetAsync(apiName);
        if (httpResponse.IsSuccessStatusCode)
        {
            Users = new List<Login>();
            var apiConteudo = await httpResponse.Content.ReadAsStringAsync();
            Users = JsonConvert.DeserializeObject<List<Login>>(apiConteudo);
            StateHasChanged();
        }
    }

    private async void GetUsers()
    {
        var apiName = "http://mrd34dpooly-001-site1.ftempurl.com/api/login";
        var httpResponse = await client.GetAsync(apiName);
        if (httpResponse.IsSuccessStatusCode)
        {
            Users = new List<Login>();
            var apiConteudo = await httpResponse.Content.ReadAsStringAsync();
            Users = JsonConvert.DeserializeObject<List<Login>>(apiConteudo);
            postStatus = "";
            StateHasChanged();
        }
    }

    private async Task CadastrarUsuario()
    {
        adduser.DataCriacao = adduser.DataAtual.ToLocalTime();
        var apiName = "http://mrd34dpooly-001-site1.ftempurl.com/api/login";
        var httpResponse = await client.PostAsJsonAsync<Login>("http://mrd34dpooly-001-site1.ftempurl.com/api/login",adduser);
        if(httpResponse.IsSuccessStatusCode)
        {
            var postData = JsonConvert.SerializeObject(adduser);
            var postresponse = await client.PostAsync(apiName, new StringContent(postData));
            postStatus = "Cadastro efetuado com sucesso!";
            StateHasChanged();
            GetUsers();            
        }            
    }

    void RefreshPage()
    {
        _navigationManager.NavigateTo("/fetchdata");
    }

    private async Task DeleteUser(int id)
    {
        var apiName = $"http://mrd34dpooly-001-site1.ftempurl.com/api/login/{id}";
        postStatus = "Deletando:" + id;
        var httpResponse = await client.DeleteAsync(apiName);
        if (httpResponse.IsSuccessStatusCode)
        {
            GetUsers();
        }
    }

    private async void UpdateUser()
    {
        adduser.DataCriacao = adduser.DataAtual.ToLocalTime();
        var apiName = "http://mrd34dpooly-001-site1.ftempurl.com/api/login/{id}";
        var httpResponse = await client.PutAsJsonAsync<Login>("http://mrd34dpooly-001-site1.ftempurl.com/api/login/{id}",adduser);
        if(httpResponse.IsSuccessStatusCode)
        {
            var postData = JsonConvert.SerializeObject(adduser);
            var postresponse = await client.PutAsync(apiName, new StringContent(postData));
            postStatus = "Cadastro efetuado com sucesso!";
            StateHasChanged();
            GetUsers();            
        }     
    }

}
